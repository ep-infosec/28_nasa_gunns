/* @copyright Copyright 2019 United States Government as represented by the Administrator of the
              National Aeronautics and Space Administration.  All Rights Reserved. */
           
##include "sims/networks/electrical/PvArrayRegTest.hh"
##include "sims/networks/electrical/test/TestElectSarNetwork.hh"

class PhotovoltaicTestSimObject: public Trick::SimObject
{
    public:
        int                    threadIdElect;      /**< (--) Thread ID for the elect networks */
        PvArrayRegTest         pvNetwork;          /**< (--) GUNNS elect network */
        TestElectSarNetwork    sarNetwork;         /**< (--) GUNNS elect network */

        PhotovoltaicTestSimObject(int thread_id_elect   = 0)
            :
            threadIdElect(thread_id_elect),
            pvNetwork("pvSimObject.pvNetwork"),
            sarNetwork("pvSimObject.sarNetwork")
        {
            ("initialization")      pvNetwork.initialize();
            ("initialization")      sarNetwork.initialize();
            ("restart")             pvNetwork.restart();
            CthreadIdElect   (ECLSS_LO, "scheduled") pvNetwork.update(ECLSS_LO);
            CthreadIdElect   (ECLSS_LO, "scheduled") sarNetwork.update(ECLSS_LO);
        }
        
        virtual ~PhotovoltaicTestSimObject() { /* nothing to do */ }
        
    private:
        // Copy constructor unavailable since declared private and not implemented.
        PhotovoltaicTestSimObject(const PhotovoltaicTestSimObject&);
        // Assignment operator unavailable since declared private and not implemented.
        PhotovoltaicTestSimObject operator = (const PhotovoltaicTestSimObject&);
};
